#set($packages = $array.createArray())
#set($void = $array.addCollection($packages, $Package))
#set($void = $array.addCollection($packages, $SmartPackage))
#foreach ($package in $sorter.sort($packages, "qualifiedName"))
#set($qualifiedName = $package.qualifiedName)
#set ($classList = $array.createArray())
#foreach ($element in $report.getOwnedElementsIncludingAdditional($package, true))
#if ($element.elementType == "class")
#set ($void = $classList.add($element))
#end
#end
#end
#foreach ($class in $sorter.sort($classList))
!CLASS $class.name
#set($relationList = $report.getRelationship($class))
$group.init()
#foreach ($relation in $relationList)
#set($void = $group.put($relation.humanType, $relation))
#end
#if (!$relationList.isEmpty())
#foreach ($key in $sorter.sort($group.groupNames()))
#foreach($rel in $sorter.sort($group.get($key)))
## ONLY WANT ASSOCIATIONS ##
#if($rel.humanType == 'Association')
## RESET FOR NEXT IERATION ##
#set($roleName = "")
#set($isNav = false)
#set($aggregation = false)
#set($plural = false)
#foreach($end in $rel.memberEnd)
## GET THE ROLE NAME, IF ANY ##
#if($end.type == $class)#set($roleName = $end.name)#end
#if($end.aggregation == "composite")#set($aggregation=true)#end
#if($end.upperValue.value == -1 or $end.upperValue.value > 1)#set($plural = true)#end
## CHECK IF WE HAVE A NAVIGABLE END FROM OTHER SIDE ##
#if($end.owner != $class && $end.owner.humanType == 'Class')
#set($isNav = true)
#end
#end
#end
#if(!$aggregation)
#foreach ($re in $sorter.sort($rel.relatedElement))
## DONT GET THE ONE THAT IS THE CURRENT CLASS
#if($re != $class && $isNav)
#if($plural)#set($suffix = "Ids")#else#set($suffix = "Id")#end
#set($refId = $roleName + $suffix)
(name() = '$refId' and ../name() = '$re.name') or 
#end
#end
#end
#end
#end
#end
#end